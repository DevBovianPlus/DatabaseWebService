//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatabaseWebService.DomainNOZ
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class GrafolitNOZEntities : DbContext
    {
        public GrafolitNOZEntities()
            : base("name=GrafolitNOZEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<NarociloOptimalnihZalogPozicija> NarociloOptimalnihZalogPozicija { get; set; }
        public DbSet<Nastavitve_NOZ> Nastavitve_NOZ { get; set; }
        public DbSet<Osebe_NOZ> Osebe_NOZ { get; set; }
        public DbSet<OsebeNadrejeni_NOZ> OsebeNadrejeni_NOZ { get; set; }
        public DbSet<StatusNarocilaOptimalnihZalog> StatusNarocilaOptimalnihZalog { get; set; }
        public DbSet<Stranka_NOZ> Stranka_NOZ { get; set; }
        public DbSet<StrankaZaposleni_NOZ> StrankaZaposleni_NOZ { get; set; }
        public DbSet<SystemEmailMessage_NOZ> SystemEmailMessage_NOZ { get; set; }
        public DbSet<SystemMessageEvents_NOZ> SystemMessageEvents_NOZ { get; set; }
        public DbSet<TipStranka_NOZ> TipStranka_NOZ { get; set; }
        public DbSet<Vloga_NOZ> Vloga_NOZ { get; set; }
        public DbSet<NarociloOptimalnihZalog> NarociloOptimalnihZalog { get; set; }
    
        [EdmFunction("GrafolitNOZEntities", "GetCategoryList")]
        public virtual IQueryable<string> GetCategoryList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string>("[GrafolitNOZEntities].[GetCategoryList]()");
        }
    
        [EdmFunction("GrafolitNOZEntities", "GetListOptimalnaZaloga")]
        public virtual IQueryable<GetListOptimalnaZaloga_Result> GetListOptimalnaZaloga()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetListOptimalnaZaloga_Result>("[GrafolitNOZEntities].[GetListOptimalnaZaloga]()");
        }
    
        [EdmFunction("GrafolitNOZEntities", "GetColorListByCategory")]
        public virtual IQueryable<string> GetColorListByCategory(string categoryStr)
        {
            var categoryStrParameter = categoryStr != null ?
                new ObjectParameter("CategoryStr", categoryStr) :
                new ObjectParameter("CategoryStr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string>("[GrafolitNOZEntities].[GetColorListByCategory](@CategoryStr)", categoryStrParameter);
        }
    
        [EdmFunction("GrafolitNOZEntities", "GetProductsByOptimalStockValues")]
        public virtual IQueryable<GetProductsByOptimalStockValues_Result> GetProductsByOptimalStockValues(string kategorija, string gloss, string gramatura, string velikost, string tek, string barva)
        {
            var kategorijaParameter = kategorija != null ?
                new ObjectParameter("Kategorija", kategorija) :
                new ObjectParameter("Kategorija", typeof(string));
    
            var glossParameter = gloss != null ?
                new ObjectParameter("Gloss", gloss) :
                new ObjectParameter("Gloss", typeof(string));
    
            var gramaturaParameter = gramatura != null ?
                new ObjectParameter("Gramatura", gramatura) :
                new ObjectParameter("Gramatura", typeof(string));
    
            var velikostParameter = velikost != null ?
                new ObjectParameter("Velikost", velikost) :
                new ObjectParameter("Velikost", typeof(string));
    
            var tekParameter = tek != null ?
                new ObjectParameter("Tek", tek) :
                new ObjectParameter("Tek", typeof(string));
    
            var barvaParameter = barva != null ?
                new ObjectParameter("Barva", barva) :
                new ObjectParameter("Barva", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetProductsByOptimalStockValues_Result>("[GrafolitNOZEntities].[GetProductsByOptimalStockValues](@Kategorija, @Gloss, @Gramatura, @Velikost, @Tek, @Barva)", kategorijaParameter, glossParameter, gramaturaParameter, velikostParameter, tekParameter, barvaParameter);
        }
    
        [EdmFunction("GrafolitNOZEntities", "GetSupplierList")]
        public virtual IQueryable<GetSupplierList_Result> GetSupplierList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetSupplierList_Result>("[GrafolitNOZEntities].[GetSupplierList]()");
        }
    
        [EdmFunction("GrafolitNOZEntities", "GetProductStockByIdent")]
        public virtual IQueryable<GetProductStockByIdent_Result> GetProductStockByIdent(string ident)
        {
            var identParameter = ident != null ?
                new ObjectParameter("Ident", ident) :
                new ObjectParameter("Ident", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetProductStockByIdent_Result>("[GrafolitNOZEntities].[GetProductStockByIdent](@Ident)", identParameter);
        }
    
        [EdmFunction("GrafolitNOZEntities", "IdentByOPTGroup")]
        public virtual IQueryable<IdentByOPTGroup_Result> IdentByOPTGroup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<IdentByOPTGroup_Result>("[GrafolitNOZEntities].[IdentByOPTGroup]()");
        }
    
        [EdmFunction("GrafolitNOZEntities", "ProductSalesQtyByGroupID")]
        public virtual IQueryable<ProductSalesQtyByGroupID_Result> ProductSalesQtyByGroupID(Nullable<int> groupID)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ProductSalesQtyByGroupID_Result>("[GrafolitNOZEntities].[ProductSalesQtyByGroupID](@GroupID)", groupIDParameter);
        }
    
        [EdmFunction("GrafolitNOZEntities", "GetDIMIdentiOPTList")]
        public virtual IQueryable<GetDIMIdentiOPTList_Result> GetDIMIdentiOPTList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetDIMIdentiOPTList_Result>("[GrafolitNOZEntities].[GetDIMIdentiOPTList]()");
        }
    
        public virtual int DodajPantheonDokument(string p_xParameters, ObjectParameter p_cExportPath, ObjectParameter p_cKey, ObjectParameter p_cError)
        {
            var p_xParametersParameter = p_xParameters != null ?
                new ObjectParameter("p_xParameters", p_xParameters) :
                new ObjectParameter("p_xParameters", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DodajPantheonDokument", p_xParametersParameter, p_cExportPath, p_cKey, p_cError);
        }
    
        [EdmFunction("GrafolitNOZEntities", "GetPantheonUsersNOZ")]
        public virtual IQueryable<GetPantheonUsersNOZ_Result> GetPantheonUsersNOZ()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPantheonUsersNOZ_Result>("[GrafolitNOZEntities].[GetPantheonUsersNOZ]()");
        }
    }
}
