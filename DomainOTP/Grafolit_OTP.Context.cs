//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatabaseWebService.DomainOTP
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class GrafolitOTPEntities : DbContext
    {
        public GrafolitOTPEntities()
            : base("name=GrafolitOTPEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Osebe_OTP> Osebe_OTP { get; set; }
        public DbSet<Vloga_OTP> Vloga_OTP { get; set; }
        public DbSet<StatusOdpoklica> StatusOdpoklica { get; set; }
        public DbSet<TipOdpoklica> TipOdpoklica { get; set; }
        public DbSet<TipStranka> TipStranka { get; set; }
        public DbSet<StrankaZaposleni_OTP> StrankaZaposleni_OTP { get; set; }
        public DbSet<NarociloPozicija> NarociloPozicija { get; set; }
        public DbSet<Narocilo> Narocilo { get; set; }
        public DbSet<Relacija> Relacija { get; set; }
        public DbSet<Razpis> Razpis { get; set; }
        public DbSet<RazpisPozicija> RazpisPozicija { get; set; }
        public DbSet<SystemEmailMessage_OTP> SystemEmailMessage_OTP { get; set; }
        public DbSet<SystemMessageEvents_OTP> SystemMessageEvents_OTP { get; set; }
        public DbSet<OsebeNadrejeni_OTP> OsebeNadrejeni_OTP { get; set; }
        public DbSet<TipPrevoza> TipPrevoza { get; set; }
        public DbSet<LastnaZaloga> LastnaZaloga { get; set; }
        public DbSet<Odpoklic> Odpoklic { get; set; }
        public DbSet<PrijavaPrevoznika> PrijavaPrevoznika { get; set; }
        public DbSet<Stranka_OTP> Stranka_OTP { get; set; }
        public DbSet<PrevzemiView> PrevzemiView { get; set; }
        public DbSet<Jeziki> Jeziki { get; set; }
        public DbSet<KontaktneOsebe_OTP> KontaktneOsebe_OTP { get; set; }
        public DbSet<OdpoklicPozicija> OdpoklicPozicija { get; set; }
        public DbSet<ZbirnikTon> ZbirnikTon { get; set; }
    
        [EdmFunction("GrafolitOTPEntities", "SeznamDobaviteljev")]
        public virtual IQueryable<SeznamDobaviteljev_Result> SeznamDobaviteljev()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SeznamDobaviteljev_Result>("[GrafolitOTPEntities].[SeznamDobaviteljev]()");
        }
    
        [EdmFunction("GrafolitOTPEntities", "GetLastYearRecallCountBySuplierAndRoute")]
        public virtual IQueryable<GetLastYearRecallCountBySuplierAndRoute_Result> GetLastYearRecallCountBySuplierAndRoute(Nullable<int> relacijaID, Nullable<int> dobaviteljID)
        {
            var relacijaIDParameter = relacijaID.HasValue ?
                new ObjectParameter("RelacijaID", relacijaID) :
                new ObjectParameter("RelacijaID", typeof(int));
    
            var dobaviteljIDParameter = dobaviteljID.HasValue ?
                new ObjectParameter("DobaviteljID", dobaviteljID) :
                new ObjectParameter("DobaviteljID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetLastYearRecallCountBySuplierAndRoute_Result>("[GrafolitOTPEntities].[GetLastYearRecallCountBySuplierAndRoute](@RelacijaID, @DobaviteljID)", relacijaIDParameter, dobaviteljIDParameter);
        }
    
        public virtual int DodajPantheonDokument(string p_xParameters, ObjectParameter p_cExportPath, ObjectParameter p_cKey, ObjectParameter p_cError)
        {
            var p_xParametersParameter = p_xParameters != null ?
                new ObjectParameter("p_xParameters", p_xParameters) :
                new ObjectParameter("p_xParameters", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DodajPantheonDokument", p_xParametersParameter, p_cExportPath, p_cKey, p_cError);
        }
    
        [EdmFunction("GrafolitOTPEntities", "GetCategoryListOTP")]
        public virtual IQueryable<string> GetCategoryListOTP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string>("[GrafolitOTPEntities].[GetCategoryListOTP]()");
        }
    
        [EdmFunction("GrafolitOTPEntities", "SeznamPozicijNarocilnic10ZaOdpoklic")]
        public virtual IQueryable<SeznamPozicijNarocilnic10ZaOdpoklic_Result> SeznamPozicijNarocilnic10ZaOdpoklic()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SeznamPozicijNarocilnic10ZaOdpoklic_Result>("[GrafolitOTPEntities].[SeznamPozicijNarocilnic10ZaOdpoklic]()");
        }
    
        [EdmFunction("GrafolitOTPEntities", "SeznamPozicijOdprtihNarocilnicGledeNaDobavitelja")]
        public virtual IQueryable<SeznamPozicijOdprtihNarocilnicGledeNaDobavitelja_Result> SeznamPozicijOdprtihNarocilnicGledeNaDobavitelja(string dobavitelj)
        {
            var dobaviteljParameter = dobavitelj != null ?
                new ObjectParameter("Dobavitelj", dobavitelj) :
                new ObjectParameter("Dobavitelj", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SeznamPozicijOdprtihNarocilnicGledeNaDobavitelja_Result>("[GrafolitOTPEntities].[SeznamPozicijOdprtihNarocilnicGledeNaDobavitelja](@Dobavitelj)", dobaviteljParameter);
        }
    }
}
