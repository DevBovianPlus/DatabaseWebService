//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatabaseWebService.Domain
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class AnalizaProdajeEntities : DbContext
    {
        public AnalizaProdajeEntities()
            : base("name=AnalizaProdajeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Dogodek> Dogodek { get; set; }
        public DbSet<Kategorija> Kategorija { get; set; }
        public DbSet<KontaktneOsebe> KontaktneOsebe { get; set; }
        public DbSet<Nadzor> Nadzor { get; set; }
        public DbSet<Osebe> Osebe { get; set; }
        public DbSet<Sporocila> Sporocila { get; set; }
        public DbSet<StatusDogodek> StatusDogodek { get; set; }
        public DbSet<StatusNadzora> StatusNadzora { get; set; }
        public DbSet<StrankaZaposleni> StrankaZaposleni { get; set; }
        public DbSet<Vloga> Vloga { get; set; }
        public DbSet<PlanStranka> PlanStranka { get; set; }
        public DbSet<Naprava> Naprava { get; set; }
        public DbSet<SystemEmailMessage> SystemEmailMessage { get; set; }
        public DbSet<SystemMessageEvents> SystemMessageEvents { get; set; }
        public DbSet<StrankaKategorija> StrankaKategorija { get; set; }
        public DbSet<Avtomatika> Avtomatika { get; set; }
        public DbSet<IzpisGrafa> IzpisGrafa { get; set; }
        public DbSet<OsebeNadrejeni> OsebeNadrejeni { get; set; }
        public DbSet<DogodekSestanek> DogodekSestanek { get; set; }
        public DbSet<FinancniDashboard> FinancniDashboard { get; set; }
        public DbSet<Stranka> Stranka { get; set; }
        public DbSet<OpombaStranka> OpombaStranka { get; set; }
    
        [EdmFunction("AnalizaProdajeEntities", "IzrisGrafa")]
        public virtual IQueryable<IzrisGrafa_Result> IzrisGrafa(string stranka, string kategorija, Nullable<int> tip_Grafa, Nullable<int> tip_Izpisa, Nullable<System.DateTime> obdobjeOd, Nullable<System.DateTime> obdobjeDo)
        {
            var strankaParameter = stranka != null ?
                new ObjectParameter("Stranka", stranka) :
                new ObjectParameter("Stranka", typeof(string));
    
            var kategorijaParameter = kategorija != null ?
                new ObjectParameter("Kategorija", kategorija) :
                new ObjectParameter("Kategorija", typeof(string));
    
            var tip_GrafaParameter = tip_Grafa.HasValue ?
                new ObjectParameter("Tip_Grafa", tip_Grafa) :
                new ObjectParameter("Tip_Grafa", typeof(int));
    
            var tip_IzpisaParameter = tip_Izpisa.HasValue ?
                new ObjectParameter("Tip_Izpisa", tip_Izpisa) :
                new ObjectParameter("Tip_Izpisa", typeof(int));
    
            var obdobjeOdParameter = obdobjeOd.HasValue ?
                new ObjectParameter("ObdobjeOd", obdobjeOd) :
                new ObjectParameter("ObdobjeOd", typeof(System.DateTime));
    
            var obdobjeDoParameter = obdobjeDo.HasValue ?
                new ObjectParameter("ObdobjeDo", obdobjeDo) :
                new ObjectParameter("ObdobjeDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<IzrisGrafa_Result>("[AnalizaProdajeEntities].[IzrisGrafa](@Stranka, @Kategorija, @Tip_Grafa, @Tip_Izpisa, @ObdobjeOd, @ObdobjeDo)", strankaParameter, kategorijaParameter, tip_GrafaParameter, tip_IzpisaParameter, obdobjeOdParameter, obdobjeDoParameter);
        }
    
        [EdmFunction("AnalizaProdajeEntities", "IzrisGrafa1")]
        public virtual IQueryable<IzrisGrafa1_Result> IzrisGrafa1(string stranka, string kategorija, Nullable<int> tip_Grafa, Nullable<int> tip_Izpisa, Nullable<System.DateTime> obdobjeOd, Nullable<System.DateTime> obdobjeDo)
        {
            var strankaParameter = stranka != null ?
                new ObjectParameter("Stranka", stranka) :
                new ObjectParameter("Stranka", typeof(string));
    
            var kategorijaParameter = kategorija != null ?
                new ObjectParameter("Kategorija", kategorija) :
                new ObjectParameter("Kategorija", typeof(string));
    
            var tip_GrafaParameter = tip_Grafa.HasValue ?
                new ObjectParameter("Tip_Grafa", tip_Grafa) :
                new ObjectParameter("Tip_Grafa", typeof(int));
    
            var tip_IzpisaParameter = tip_Izpisa.HasValue ?
                new ObjectParameter("Tip_Izpisa", tip_Izpisa) :
                new ObjectParameter("Tip_Izpisa", typeof(int));
    
            var obdobjeOdParameter = obdobjeOd.HasValue ?
                new ObjectParameter("ObdobjeOd", obdobjeOd) :
                new ObjectParameter("ObdobjeOd", typeof(System.DateTime));
    
            var obdobjeDoParameter = obdobjeDo.HasValue ?
                new ObjectParameter("ObdobjeDo", obdobjeDo) :
                new ObjectParameter("ObdobjeDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<IzrisGrafa1_Result>("[AnalizaProdajeEntities].[IzrisGrafa1](@Stranka, @Kategorija, @Tip_Grafa, @Tip_Izpisa, @ObdobjeOd, @ObdobjeDo)", strankaParameter, kategorijaParameter, tip_GrafaParameter, tip_IzpisaParameter, obdobjeOdParameter, obdobjeDoParameter);
        }
    }
}
